" set colorscheme, enable syntax highlighting
colorscheme habamax
syntax enable
" enable line number, disable vi compatibility, don't redraw while executing macros (better performance), disable error bell
set nocompatible number lazyredraw belloff=all 
" turn on the wild menu (autocomplete commands), highlight the active line
set wildmenu cursorline cursorcolumn 
" 1 tab == 4 spaces
set shiftwidth=4 tabstop=4 expandtab softtabstop=4 
" height of the command bar, show commands in bottom line (and number prefixes), always show statusline, always show tab line
set modelines=1 cmdheight=1 showcmd laststatus=2 showtabline=2 
" configure backspace to act like it should, enable mouse support, left/right at beginning/end of line will go to previous/next line
set backspace=eol,start,indent mouse=a whichwrap+=<,>,[,],h,l 
" ignore case when searching, highlight search results, incremental search, yank/paste to unnamed register
set ignorecase hlsearch incsearch clipboard=unnamedplus 
" set status line information (file name, cwd, line, col)
set statusline=\ %F%m%r%h\ %w\ \ CWD:\ %r%{getcwd()}%h\ \ \ Line:\ %l\ \ Column:\ %c 

" recognize filetypes and behave differently depending on filetype
filetype indent on
filetype plugin on

" return to last edit position when opening files, always open buffers in new tabs
au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif 
au BufAdd,BufNewFile * nested tab sball 
" set timeout for buttons to 200ms in insert mode, 1000ms in other modes, map jj to <esc>.
au InsertEnter * set timeoutlen=200
au InsertLeave * set timeoutlen=1000
inoremap jj <esc>

" show fzf window in other tab (needed to that no .swp is created if cancelled without opening anything)
let g:fzf_layout = { 'down': '100%' } 
" disable standard mappings for fold search
let g:foldsearch_disable_mappings = 1
" map leader to space
let mapleader = "\<space>" 

" s in visual mode will search for word where multicursor will be created
xnoremap s :VMSearch<space>
" fzf grep, fzf files, fzf lines, unfold all, replace all
nnoremap <silent> <leader>g :Ag <C-R><C-W><cr>
nnoremap <silent> <leader>f :Files<cr>
nnoremap <silent> <leader>l :BLines <cr>
nnoremap <silent> <leader>z zR
noremap <leader>r :%s///g<left><left><left>
" search is "fuzzy" by adding .\{-} instead of space when searching, space clear search highlight, ö/Ö mapped to search.
cnoremap <expr> <space> getcmdtype() == "/" \|\| getcmdtype() == "?" ? ".\\{-}" : "<space>"
cnoremap <expr> <cr> getcmdtype() == "/" \|\| getcmdtype() == "?" ? "<cr>:Fs<cr>" : "<cr>"
nnoremap <space> :nohlsearch<cr>
nnoremap ö /
nnoremap Ö ?
" toggles terminal, esc enters normal mode in terminal
nnoremap <silent> <leader>t :terminal<cr>
tmap <leader>t <esc>:bd!<cr>
tmap <esc> <C-\><C-n>
" x/X marks line (helix-like)
nnoremap x V
nnoremap X V
xnoremap x j
xnoremap X k
" redo with U
noremap U <C-r>
